//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class DeserializeAccountResponse {
    public class Users_Z {
        public Integer id {get;set;}
        public String hubspot_id {get;set;}
        public String first_name {get;set;}
        public String last_name {get;set;}
        public String country {get;set;}
        public String address1 {get;set;}
        public String address2 {get;set;}
        public String city {get;set;}
        public String state {get;set;}
        public String postal_code {get;set;}
        public String email {get;set;}
        public String job_title {get;set;}
        public String phone {get;set;}
        public String profile_picture {get;set;}
        public String type {get;set;}
        public Integer status {get;set;}
        public String agreement {get;set;}
        public String active_status {get;set;}
        public String last_login {get;set;}
        public String time_created {get;set;}
        public String date_created {get;set;}
        public String time_updated {get;set;}
        public String date_updated {get;set;}
        public String date_deleted {get;set;}
        public Boolean reseller_access {get;set;}
        public String persona_id {get;set;}
        public String last_checked {get;set;}
        public String email_opt_out {get;set;}
        public Users ad_lists_created {get;set;}
        public Users ad_lists {get;set;}
        public Users initiatives_created {get;set;}
        public Users groups_created {get;set;}
        public Users initiatives {get;set;}
        public Users groups {get;set;}
        public Reseller account {get;set;}
        public String invited_by {get;set;}
        public String x_href {get;set;} // in json: _href
        public Integer check_digit {get;set;}

        public Users_Z(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'id') {
                            id = parser.getIntegerValue();
                        } else if (text == 'hubspot_id') {
                            hubspot_id = parser.getText();
                        } else if (text == 'first_name') {
                            first_name = parser.getText();
                        } else if (text == 'last_name') {
                            last_name = parser.getText();
                        } else if (text == 'country') {
                            country = parser.getText();
                        } else if (text == 'address1') {
                            address1 = parser.getText();
                        } else if (text == 'address2') {
                            address2 = parser.getText();
                        } else if (text == 'city') {
                            city = parser.getText();
                        } else if (text == 'state') {
                            state = parser.getText();
                        } else if (text == 'postal_code') {
                            postal_code = parser.getText();
                        } else if (text == 'email') {
                            email = parser.getText();
                        } else if (text == 'job_title') {
                            job_title = parser.getText();
                        } else if (text == 'phone') {
                            phone = parser.getText();
                        } else if (text == 'profile_picture') {
                            profile_picture = parser.getText();
                        } else if (text == 'type') {
                            type = parser.getText();
                        } else if (text == 'status') {
                            status = parser.getIntegerValue();
                        } else if (text == 'agreement') {
                            agreement = parser.getText();
                        } else if (text == 'active_status') {
                            active_status = parser.getText();
                        } else if (text == 'last_login') {
                            last_login = parser.getText();
                        } else if (text == 'time_created') {
                            time_created = parser.getText();
                        } else if (text == 'date_created') {
                            date_created = parser.getText();
                        } else if (text == 'time_updated') {
                            time_updated = parser.getText();
                        } else if (text == 'date_updated') {
                            date_updated = parser.getText();
                        } else if (text == 'date_deleted') {
                            date_deleted = parser.getText();
                        } else if (text == 'reseller_access') {
                            reseller_access = parser.getBooleanValue();
                        } else if (text == 'persona_id') {
                            persona_id = parser.getText();
                        } else if (text == 'last_checked') {
                            last_checked = parser.getText();
                        } else if (text == 'email_opt_out') {
                            email_opt_out = parser.getText();
                        } else if (text == 'ad_lists_created') {
                            ad_lists_created = new Users(parser);
                        } else if (text == 'ad_lists') {
                            ad_lists = new Users(parser);
                        } else if (text == 'initiatives_created') {
                            initiatives_created = new Users(parser);
                        } else if (text == 'groups_created') {
                            groups_created = new Users(parser);
                        } else if (text == 'initiatives') {
                            initiatives = new Users(parser);
                        } else if (text == 'groups') {
                            groups = new Users(parser);
                        } else if (text == 'account') {
                            account = new Reseller(parser);
                        } else if (text == 'invited_by') {
                            invited_by = parser.getText();
                        } else if (text == '_href') {
                            x_href = parser.getText();
                        } else if (text == 'check_digit') {
                            check_digit = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Users_Z consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public class Account {
        public String time_created {get;set;}
        public String time_updated {get;set;}
        public Integer id {get;set;}
        public String date_created {get;set;}
        public String date_updated {get;set;}
        public Users users {get;set;}
        public Users groups {get;set;}
        public Users initiatives {get;set;}
        public Users roles {get;set;}
        public String organization_name {get;set;}
        public String unspsc_code {get;set;}
        public String country {get;set;}
        public String address1 {get;set;}
        public String address2 {get;set;}
        public String city {get;set;}
        public String state {get;set;}
        public String postal_code {get;set;}
        public String logo {get;set;}
        public Integer allowed_builds {get;set;}
        public String allowed_tokens {get;set;}
        public String mapper_training_seats {get;set;}
        public Integer select_ads {get;set;}
        public String hide_organization_name {get;set;}
        public String status {get;set;}
        public String domain {get;set;}
        public Boolean show_implementation {get;set;}
        public Reseller reseller {get;set;}
        public String reseller_status {get;set;}
        public String x_href {get;set;} // in json: _href

        public Account(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    //System.debug('Account parser text--> '+text);
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'time_created') {
                            time_created = parser.getText();
                            //System.debug('time_created --> '+time_created);
                        } else if (text == 'time_updated') {
                            time_updated = parser.getText();
                        } else if (text == 'id') {
                            id = parser.getIntegerValue();
                            //System.debug('Account id --> '+id);
                        } else if (text == 'date_created') {
                            date_created = parser.getText();
                        } else if (text == 'date_updated') {
                            date_updated = parser.getText();
                        } else if (text == 'users') {
                            users = new Users(parser);
                        } else if (text == 'groups') {
                            groups = new Users(parser);
                        } else if (text == 'initiatives') {
                            initiatives = new Users(parser);
                        } else if (text == 'roles') {
                            roles = new Users(parser);
                        } else if (text == 'organization_name') {
                            organization_name = parser.getText();
                        } else if (text == 'unspsc_code') {
                            unspsc_code = parser.getText();
                        } else if (text == 'country') {
                            country = parser.getText();
                        } else if (text == 'address1') {
                            address1 = parser.getText();
                        } else if (text == 'address2') {
                            address2 = parser.getText();
                        } else if (text == 'city') {
                            city = parser.getText();
                        } else if (text == 'state') {
                            state = parser.getText();
                        } else if (text == 'postal_code') {
                            postal_code = parser.getText();
                        } else if (text == 'logo') {
                            logo = parser.getText();
                        } else if (text == 'allowed_builds') {
                            allowed_builds = parser.getIntegerValue();
                        } else if (text == 'allowed_tokens') {
                            allowed_tokens = parser.getText();
                        } else if (text == 'mapper_training_seats') {
                            mapper_training_seats = parser.getText();
                        } else if (text == 'select_ads') {
                            select_ads = parser.getIntegerValue();
                        } else if (text == 'hide_organization_name') {
                            hide_organization_name = parser.getText();
                        } else if (text == 'status') {
                            status = parser.getText();
                        } else if (text == 'domain') {
                            domain = parser.getText();
                        } else if (text == 'show_implementation') {
                            show_implementation = parser.getBooleanValue();
                        } else if (text == 'reseller') {
                            reseller = new Reseller(parser);
                        } else if (text == 'reseller_status') {
                            reseller_status = parser.getText();
                        } else if (text == '_href') {
                            x_href = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Account consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public class Ad_lists {
        public Integer id {get;set;}
        public String name {get;set;}
        public String whitebox_share {get;set;}
        public String publish {get;set;}
        public String publish_status {get;set;}
        public String publish_ident {get;set;}
        public String restricted {get;set;}
        public String active_status {get;set;}
        public String outofdate {get;set;}
        public String time_created {get;set;}
        public String date_created {get;set;}
        public String time_updated {get;set;}
        public String date_updated {get;set;}
        public Users users {get;set;}
        public Users authority_documents {get;set;}
        public Users groups {get;set;}
        public Users initiatives {get;set;}
        public Users tracked_controls {get;set;}
        public Reseller creator {get;set;}
        public Reseller last_modified_by {get;set;}
        public Reseller account {get;set;}
        public String x_href {get;set;} // in json: _href
        public Integer check_digit {get;set;}
        public Map<Integer, String> mapAuthorityDocListIdAndName { get; set;}

        public Ad_lists(JSONParser parser) {
            mapAuthorityDocListIdAndName = new Map<Integer, String>();
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'id') {
                            id = parser.getIntegerValue();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'whitebox_share') {
                            whitebox_share = parser.getText();
                        } else if (text == 'publish') {
                            publish = parser.getText();
                        } else if (text == 'publish_status') {
                            publish_status = parser.getText();
                        } else if (text == 'publish_ident') {
                            publish_ident = parser.getText();
                        } else if (text == 'restricted') {
                            restricted = parser.getText();
                        } else if (text == 'active_status') {
                            active_status = parser.getText();
                        } else if (text == 'outofdate') {
                            outofdate = parser.getText();
                        } else if (text == 'time_created') {
                            time_created = parser.getText();
                        } else if (text == 'date_created') {
                            date_created = parser.getText();
                        } else if (text == 'time_updated') {
                            time_updated = parser.getText();
                        } else if (text == 'date_updated') {
                            date_updated = parser.getText();
                        } else if (text == 'users') {
                            users = new Users(parser);
                        } else if (text == 'authority_documents') {
                            authority_documents = new Users(parser);
                        } else if (text == 'groups') {
                            groups = new Users(parser);
                        } else if (text == 'initiatives') {
                            initiatives = new Users(parser);
                        } else if (text == 'tracked_controls') {
                            tracked_controls = new Users(parser);
                        } else if (text == 'creator') {
                            creator = new Reseller(parser);
                        } else if (text == 'last_modified_by') {
                            last_modified_by = new Reseller(parser);
                        } else if (text == 'account') {
                            account = new Reseller(parser);
                        } else if (text == '_href') {
                            x_href = parser.getText();
                        } else if (text == 'check_digit') {
                            check_digit = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Ad_lists consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
            mapAuthorityDocListIdAndName.put(id,name);
        }
    }

    public Account account {get;set;}
    public List<Roles> roles {get;set;}
    public List<Roles> initiatives {get;set;}
    public List<Roles> groups {get;set;}
    public List<Users_Z> users {get;set;}
    public List<Ad_lists> ad_lists {get;set;}
    public String subscription_expires {get;set;}

    public DeserializeAccountResponse(JSONParser parser) {
        //System.debug('Inside DeserializeAccountResponse');
        Integer count = 0;
        while (parser.nextToken() != System.JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                String text = parser.getText();
                //System.debug('text-->'+text);
                if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                    if (text == 'account') {
                        account = new Account(parser);
                    } else if (text == 'roles') {
                        roles = arrayOfRoles(parser);
                    } else if (text == 'initiatives') {
                        initiatives = arrayOfRoles(parser);
                    } else if (text == 'groups') {
                        groups = arrayOfRoles(parser);
                    } else if (text == 'users') {
                        users = arrayOfUsers_Z(parser);
                    } else if (text == 'ad_lists') {
                        ad_lists = arrayOfAd_lists(parser);
                    } else if (text == 'subscription_expires') {
                        subscription_expires = parser.getText();
                    } else {
                        System.debug(LoggingLevel.WARN, 'DeserializeAccountResponse consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }

    public class Reseller {
        public Integer id {get;set;}
        public String x_href {get;set;} // in json: _href

        public Reseller(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'id') {
                            id = parser.getIntegerValue();
                        } else if (text == '_href') {
                            x_href = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Reseller consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public class Roles {
        public Roles(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        {
                            System.debug(LoggingLevel.WARN, 'Roles consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public class Users {
        public String x_href {get;set;} // in json: _href
        public Users(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == '_href') {
                            x_href = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Users consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public static DeserializeAccountResponse parse(String json) {
        System.JSONParser parser = System.JSON.createParser(json);
        return new DeserializeAccountResponse(parser);
    }

    public static void consumeObject(System.JSONParser parser) {
        Integer depth = 0;
        do {
            System.JSONToken curr = parser.getCurrentToken();
            if (curr == System.JSONToken.START_OBJECT ||
                curr == System.JSONToken.START_ARRAY) {
                    depth++;
                } else if (curr == System.JSONToken.END_OBJECT ||
                           curr == System.JSONToken.END_ARRAY) {
                               depth--;
                           }
        } while (depth > 0 && parser.nextToken() != null);
    }

    private static List<Users_Z> arrayOfUsers_Z(System.JSONParser p) {
        List<Users_Z> res = new List<Users_Z>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Users_Z(p));
        }
        return res;
    }

    private static List<Ad_lists> arrayOfAd_lists(System.JSONParser p) {
        List<Ad_lists> res = new List<Ad_lists>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            Ad_lists ad = new Ad_lists(p);
            res.add(ad);
        }
        return res;
    }

    private static List<Roles> arrayOfRoles(System.JSONParser p) {
        List<Roles> res = new List<Roles>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Roles(p));
        }
        return res;
    }
}